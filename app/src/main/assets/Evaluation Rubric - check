Common Project Requirements
1.	App conforms to common standards found in the Android Nanodegree General Project Guidelines
    DONE
2.	App is written solely in the Java Programming Language
    DONE
3.	App utilizes stable release versions of all libraries, Gradle, and Android Studio
    DONE

Core Platform Development
4.	App integrates a third-party library
    DONE (Glide)
5.	App validates all input from servers and users. If data does not exist or is in the wrong format, the app logs this fact and does not crash
    DONE
6.	App includes support for accessibility. That includes content descriptions, navigation using a D-pad, and, if applicable, non-audio versions of audio cues
    PENDING
7.	App keeps all strings in a strings.xml file and enables RTL layout switching on all layouts
    DONE
8.	App provides a widget to provide relevant information to the user on the home screen
    DONE

Google Play Services
9.	App integrates two or more Google services. Google service integrations can be a part of Google Play Services or Firebase
    DONE (FIREBASE AUTHORIZATION, FIREBASE REAL TIME DATABASE, FIREBASE STORAGE)
10.	Each service imported in the BUILD.GRADLE is used in the app.
    DONE
11.	If Location is used, the app customizes the user’s experience by using the device's location.
    DONE
12.	If Admob is used, the app displays test ads. If Admob was not used, student meets specifications.
    DONE
13.	If Analytics is used, the app creates only one analytics instance. If Analytics was not used, student meets specifications.
    DONE - ANALYTICS IS NOT USED
14.	If Maps is used, the map provides relevant information to the user. If Maps was not used, student meets specifications.
    MAPS IS NOT USED
15.	If Identity is used, the user’s identity influences some portion of the app. If Identity was not used, student meets specifications.
    IDENTITY IS NOT USED

Material Design
16.	App theme extends AppCompat.
    DONE
17.	App uses an app bar and associated toolbars.
    DONE
18.	App uses standard and simple transitions between activities.
    DONE

Building
19.	App builds from a clean repository checkout with no additional configuration.
    DONE
20.	App builds and deploys using the install Release Gradle task.
    DONE
21.	App is equipped with a signing configuration, and the keystore and passwords are included in the repository. Keystore is referred to by a relative path.
    DONE
22.	All app dependencies are managed by Gradle.
    DONE

Data Persistence
23.	App stores data locally either by implementing a ContentProvider OR using Firebase Realtime Database OR using Room. No third-party frameworks nor Persistence Libraries may be used.
    DONE (IMPLEMENTED WITH FIREBASE REALTIME DATABASE AND SQLITE)
    Must implement at least one of the three:
        If it regularly pulls or sends data to/from a web service or API, app updates data in its cache at regular intervals using a SyncAdapter or JobDispatcher.
        IT IS NOT USED
        OR
        If it needs to pull or send data to/from a web service or API only once, or on a per request basis (such as a search application), app uses an IntentService to do so.
        IT IS NOT USED
        OR
        It it performs short duration, on-demand requests (such as search), app uses an AsyncTask.
        IT IS NOT USED
25.	If Content provider is used, the app uses a Loader to move its data to its views.
    IT IS NOT USED
26.	If Room is used, then LiveData and ViewModel are used when required and no unnecessary calls to the database are made.
    IT IS NOT USED

Suggestions to make your project better
27.	Make your app more delightful with material design patterns such as shared element transitions across activities and parallax scrolling where two or more items must scroll in the same activity.
    DONE
28.	Implement notifications in your app. Remember the following when implementing notifications:
    IT IS NOT USED
    29.	Notifications should not contain advertising or content unrelated to the core function of the app.
        IT IS NOT USED
    30.	Notifications should be persistent only if related to ongoing events (such as music playback or a phone call).
        IT IS NOT USED
    31.	Multiple notifications are stacked into a single notification object, where possible.
        IT IS NOT USED
    32.	Use notifications only to indicate a context change relating to the user personally (such as an incoming message).
        IT IS NOT USED
    33.	Use notifications only to expose information/controls relating to an ongoing event (such as music playback or a phone call).
        IT IS NOT USED
34.	Implement sharing functionality in your app, making use of intent extras to share rich content (i.e. a paragraph of content-specific text, a link and description, an image, etc).
    DONE
35.	Create and use a custom view in your app that could not be achieved with the standard widgets provided by the core views on Android.
    DONE

